version: '2.1'
services:
  rabbitmq:
    image: rabbitmq-healthy
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5

  init:
    container_name: init
    image: init:latest
    env_file:
      - config/init_config.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  filter-parser-1:
    container_name: filter-parser-1
    image: filter-parser:latest
    env_file:
      - config/filter_parser_config_1.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  filter-parser-2:
    container_name: filter-parser-2
    image: filter-parser:latest
    env_file:
      - config/filter_parser_config_2.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  counter-1:
    container_name: counter-1
    image: counter:latest
    env_file:
      - config/counter_config_1.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  counter-2:
    container_name: counter-2
    image: counter:latest
    env_file:
      - config/counter_config_2.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  percentage:
    container_name: percentage
    image: percentage:latest
    env_file:
      - config/reduce_percentage_config.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  counter-by-date-1:
    container_name: counter-by-date-1
    image: counter-by-date:latest
    env_file:
      - config/counter_by_date_config_1.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  counter-by-date-2:
    container_name: counter-by-date-2
    image: counter-by-date:latest
    env_file:
      - config/counter_by_date_config_2.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  total-by-date:
    container_name: total-by-date
    image: total-by-date:latest
    env_file:
      - config/reduce_by_date_config.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  init-regions:
    container_name: init-regions
    image: init-regions:latest
    env_file:
      - config/init_regions_config.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  distance-1:
    container_name: distance-1
    image: distance:latest
    env_file:
      - config/distance_config_1.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  distance-2:
    container_name: distance-2
    image: distance:latest
    env_file:
      - config/distance_config_2.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  distance-3:
    container_name: distance-3
    image: distance:latest
    env_file:
      - config/distance_config_3.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  distance-4:
    container_name: distance-4
    image: distance:latest
    env_file:
      - config/distance_config_4.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  distance-5:
    container_name: distance-5
    image: distance:latest
    env_file:
      - config/distance_config_5.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  counter-by-region-1:
    container_name: counter-by-region-1
    image: counter-by-region:latest
    env_file:
      - config/counter_by_region_config_1.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  counter-by-region-2:
    container_name: counter-by-region-2
    image: counter-by-region:latest
    env_file:
      - config/counter_by_region_config_2.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  counter-by-region-3:
    container_name: counter-by-region-3
    image: counter-by-region:latest
    env_file:
      - config/counter_by_region_config_3.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  total-by-region:
    container_name: total-by-region
    image: total-by-region:latest
    env_file:
      - config/reduce_by_region_config.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

  end:
    container_name: end
    image: end:latest
    env_file:
      - config/end_config.env
    entrypoint: python3 /main.py
    volumes:
      - ./docs:/docs
    links:
      - rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy

